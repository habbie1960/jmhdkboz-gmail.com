#
# ripper/core.rb
#
# Copyright (C) 2003,2004 Minero Aoki
#
# This program is free software.
# You can distribute and/or modify this program under the Ruby License.
# For details of Ruby License, see ruby/COPYING.
#

require 'ripper.so'

class Ripper
  # Parses Ruby program read from _src_.
  # _src_ must be a String or a IO or a object which has #gets method.
  def Ripper.parse(src, filename = '(ripper)', lineno = 1)
    new(src, filename, lineno).parse
  end

  # This table contains name of parser events and its arity.
  PARSER_EVENT_TABLE = {
#include ids1
  }

  # This array contains name of parser events.
  PARSER_EVENTS = PARSER_EVENT_TABLE.keys

  # This table contains name of scanner events and its arity
  # (arity is always 1 for all scanner events).
  SCANNER_EVENT_TABLE = {
#include ids2
  }

  # This array contains name of scanner events.
  SCANNER_EVENTS = SCANNER_EVENT_TABLE.keys

  # This table contains name of all ripper events.
  EVENTS = PARSER_EVENTS + SCANNER_EVENTS

  ###                ###
  ### Event Handlers ###
  ###                ###

  private

  # This method is called when weak warning is produced by the parser.
  # _fmt_ and _args_ is printf style.
  def warn(fmt, *args)
  end

  # This method is called when strong warning is produced by the parser.
  # _fmt_ and _args_ is printf style.
  def warning(fmt, *args)
  end

  # This method is called when the parser found syntax error.
  def compile_error(msg)
  end

  #
  # Parser Events
  #
#include handlers1

  #
  # Lexer Events
  #
#include handlers2
end
